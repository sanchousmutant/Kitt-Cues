// –ë–∞–∑–æ–≤—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Ç–∏–ø—ã
export interface Position {
  x: number;
  y: number;
}

export interface Velocity {
  vx: number;
  vy: number;
}

export interface BallObject extends Position, Velocity {
  el: HTMLElement;
  radius: number;
  sunk: boolean;
}

export interface CatObject extends Position {
  el: HTMLElement;
  pawEl: HTMLElement | null;
  radius: number;
  cooldown: number;
}

export interface PocketObject extends Position {
  radius: number;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
export interface DeviceInfo {
  isIOS: boolean;
  isAndroid: boolean;
  isSafari: boolean;
  isChrome: boolean;
  isFirefox: boolean;
  isEdge: boolean;
  isSamsung: boolean;
  isTouch: boolean;
  supportsVibration: boolean;
  supportsOrientation: boolean;
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
export interface GameState {
  balls: BallObject[];
  cats: CatObject[];
  pockets: PocketObject[];
  score: number;
  animationFrameId: number | null;
  cueAngle: number;
  isDragging: boolean;
  dragStartX: number;
  dragStartY: number;
  didInitialReset: boolean;
  soundEnabled: boolean;
  musicEnabled: boolean;
  isMusicPlaying: boolean;
  musicVolume: number;
}

// –ê—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —É–∑–ª—ã
export interface BackgroundMusic {
  oscillator1: OscillatorNode;
  oscillator2: OscillatorNode;
  gainNode: GainNode;
  interval: number;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–∑–∏–∫–∏
export interface PhysicsSettings {
  friction: number;
  minVelocity: number;
  hitPower: number;
}

// –†–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
export interface Dimensions {
  width: number;
  height: number;
}

export interface Rect extends Dimensions, Position {}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
export interface ScalingConfig {
  scaleFactor: number;
  tableWidth: number;
  tableHeight: number;
}

// –°–æ–±—ã—Ç–∏—è –≤–∏–±—Ä–∞—Ü–∏–∏
export type VibrationPattern = number | number[];

// –¢–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
export interface GameElements {
  gameArea: HTMLElement;
  table: HTMLElement;
  tableContainer: HTMLElement;
  cue: HTMLElement;
  aimLine: HTMLElement;
  powerIndicator: HTMLElement;
  powerFill: HTMLElement;
  pyramidContainer: HTMLElement;
  helpModal: HTMLElement;
  rotationNotice: HTMLElement;
}

// –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
export interface ControlButtons {
  soundToggle: HTMLButtonElement | null;
  musicToggle: HTMLButtonElement | null;
  helpButton: HTMLButtonElement | null;
  resetButton: HTMLButtonElement | null;
  closeHelp: HTMLButtonElement | null;
  soundToggleLandscape: HTMLButtonElement | null;
  musicToggleLandscape: HTMLButtonElement | null;
  helpButtonLandscape: HTMLButtonElement | null;
  resetButtonLandscape: HTMLButtonElement | null;
}

// –≠–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞
export interface ScoreElements {
  scoreDisplay: HTMLElement | null;
  scoreDisplayLandscape: HTMLElement | null;
}

// –°–ª–∞–π–¥–µ—Ä—ã –≥—Ä–æ–º–∫–æ—Å—Ç–∏
export interface VolumeControls {
  musicVolume: HTMLInputElement | null;
  musicVolumeLandscape: HTMLInputElement | null;
}

// PWA —Å–æ–±—ã—Ç–∏—è
export interface PWAEvents {
  deferredPrompt: Event | null;
  installButton: HTMLButtonElement | null;
  isInstallable: boolean;
}

// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã
export type EventHandler = (event: Event) => void;
export type TouchEventHandler = (event: TouchEvent) => void;
export type MouseEventHandler = (event: MouseEvent) => void;
export type ButtonAction = () => void;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
export interface AnimationConfig {
  duration: number;
  easing?: string;
  delay?: number;
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
export interface CalculationResult {
  angle: number;
  distance: number;
  power: number;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
export interface PerformanceSettings {
  enableAnimations: boolean;
  reducedMotion: boolean;
  highRefreshRate: boolean;
}

// –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–æ—Ç–æ–≤
export type CatEmoji = 'üòø' | 'üò∫' | 'üò∏' | 'üôÄ';

// –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
export type GameStatus = 'idle' | 'aiming' | 'playing' | 'paused';

// –¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π –∫–∞—Å–∞–Ω–∏—è
export type TouchEventType = 'touchstart' | 'touchmove' | 'touchend';

// –†–µ–∂–∏–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
export type DisplayMode = 'portrait' | 'landscape';

// –£—Ä–æ–≤–Ω–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–∏–∫–∏
export type GraphicsQuality = 'low' | 'medium' | 'high';